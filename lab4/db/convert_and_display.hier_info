|convert_and_display
HEX0[0] <= DISP[0].DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= DISP[1].DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= DISP[2].DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= DISP[3].DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= DISP[4].DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= DISP[5].DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= DISP[6].DB_MAX_OUTPUT_PORT_TYPE
CLOCK_50 => lpm_rom0:inst.clock
CLOCK_50 => control_module:inst1.clk
CLOCK_50 => keyboard:inst7.clock_48Mhz
CLOCK_50 => reg8:inst8.clk
CLOCK_50 => reg8:inst9.clk
KEY[3] => control_module:inst1.reset
KEY[3] => keyboard:inst7.reset
KEY[3] => reg8:inst8.MR
KEY[3] => reg8:inst9.MR
PS2_CLK => keyboard:inst7.keyboard_clk
PS2_DAT => keyboard:inst7.keyboard_data
LEDR[0] <= COMPARE:inst5.error


|convert_and_display|lpm_rom0:inst
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
address[5] => altsyncram:altsyncram_component.address_a[5]
address[6] => altsyncram:altsyncram_component.address_a[6]
address[7] => altsyncram:altsyncram_component.address_a[7]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]


|convert_and_display|lpm_rom0:inst|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_g381:auto_generated.address_a[0]
address_a[1] => altsyncram_g381:auto_generated.address_a[1]
address_a[2] => altsyncram_g381:auto_generated.address_a[2]
address_a[3] => altsyncram_g381:auto_generated.address_a[3]
address_a[4] => altsyncram_g381:auto_generated.address_a[4]
address_a[5] => altsyncram_g381:auto_generated.address_a[5]
address_a[6] => altsyncram_g381:auto_generated.address_a[6]
address_a[7] => altsyncram_g381:auto_generated.address_a[7]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_g381:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_g381:auto_generated.q_a[0]
q_a[1] <= altsyncram_g381:auto_generated.q_a[1]
q_a[2] <= altsyncram_g381:auto_generated.q_a[2]
q_a[3] <= altsyncram_g381:auto_generated.q_a[3]
q_a[4] <= altsyncram_g381:auto_generated.q_a[4]
q_a[5] <= altsyncram_g381:auto_generated.q_a[5]
q_a[6] <= altsyncram_g381:auto_generated.q_a[6]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|convert_and_display|lpm_rom0:inst|altsyncram:altsyncram_component|altsyncram_g381:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[6] => ram_block1a1.PORTAADDR6
address_a[6] => ram_block1a2.PORTAADDR6
address_a[6] => ram_block1a3.PORTAADDR6
address_a[6] => ram_block1a4.PORTAADDR6
address_a[6] => ram_block1a5.PORTAADDR6
address_a[6] => ram_block1a6.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[7] => ram_block1a1.PORTAADDR7
address_a[7] => ram_block1a2.PORTAADDR7
address_a[7] => ram_block1a3.PORTAADDR7
address_a[7] => ram_block1a4.PORTAADDR7
address_a[7] => ram_block1a5.PORTAADDR7
address_a[7] => ram_block1a6.PORTAADDR7
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT


|convert_and_display|reg8:inst8
D[0] => state[0].DATAIN
D[1] => state[1].DATAIN
D[2] => state[2].DATAIN
D[3] => state[3].DATAIN
D[4] => state[4].DATAIN
D[5] => state[5].DATAIN
D[6] => state[6].DATAIN
D[7] => state[7].DATAIN
Q[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= state[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= state[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= state[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= state[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= state[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= state[7].DB_MAX_OUTPUT_PORT_TYPE
LE => state[7].ENA
LE => state[6].ENA
LE => state[5].ENA
LE => state[4].ENA
LE => state[3].ENA
LE => state[2].ENA
LE => state[1].ENA
LE => state[0].ENA
MR => state[0].ACLR
MR => state[1].ACLR
MR => state[2].ACLR
MR => state[3].ACLR
MR => state[4].ACLR
MR => state[5].ACLR
MR => state[6].ACLR
MR => state[7].ACLR
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => state[4].CLK
clk => state[5].CLK
clk => state[6].CLK
clk => state[7].CLK


|convert_and_display|control_module:inst1
clk => dflop:sreg.clk
reset => dflop:sreg.reset
reset => nextD[0].ACLR
reset => nextD[1].ACLR
reset => nextD[2].ACLR
scan_ready => Mux0.IN6
scan_ready => Mux0.IN7
scan_ready => Mux1.IN6
scan_ready => Mux1.IN7
scan_ready => Mux2.IN6
scan_ready => Mux2.IN7
scan_ready => Mux3.IN7
scan_ready => Mux4.IN7
scan_ready => Mux1.IN5
scan_ready => Mux2.IN2
scan_ready => Mux2.IN3
scan_ready => Mux2.IN4
scan_ready => Mux2.IN5
MC_LE <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
BC_LE <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
read1 <= Mux5.DB_MAX_OUTPUT_PORT_TYPE


|convert_and_display|control_module:inst1|dflop:sreg
clk => qi[0].CLK
clk => qi[1].CLK
clk => qi[2].CLK
D[0] => qi[0].DATAIN
D[1] => qi[1].DATAIN
D[2] => qi[2].DATAIN
reset => qi[0].ACLR
reset => qi[1].ACLR
reset => qi[2].ACLR
Q[0] <= qi[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= qi[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= qi[2].DB_MAX_OUTPUT_PORT_TYPE
Q_n[0] <= qi[0].DB_MAX_OUTPUT_PORT_TYPE
Q_n[1] <= qi[1].DB_MAX_OUTPUT_PORT_TYPE
Q_n[2] <= qi[2].DB_MAX_OUTPUT_PORT_TYPE


|convert_and_display|keyboard:inst7
keyboard_clk => filter[7].DATAIN
keyboard_data => SHIFTIN.DATAB
keyboard_data => process_2.IN1
clock_48Mhz => keyboard_clk_filtered.CLK
clock_48Mhz => filter[0].CLK
clock_48Mhz => filter[1].CLK
clock_48Mhz => filter[2].CLK
clock_48Mhz => filter[3].CLK
clock_48Mhz => filter[4].CLK
clock_48Mhz => filter[5].CLK
clock_48Mhz => filter[6].CLK
clock_48Mhz => filter[7].CLK
clock_48Mhz => clock_enable.CLK
reset => INCNT.OUTPUTSELECT
reset => INCNT.OUTPUTSELECT
reset => INCNT.OUTPUTSELECT
reset => INCNT.OUTPUTSELECT
reset => READ_CHAR.OUTPUTSELECT
reset => ready_set.OUTPUTSELECT
reset => scan_code[0]~reg0.ENA
reset => scan_code[1]~reg0.ENA
reset => scan_code[2]~reg0.ENA
reset => scan_code[3]~reg0.ENA
reset => scan_code[4]~reg0.ENA
reset => scan_code[5]~reg0.ENA
reset => scan_code[6]~reg0.ENA
reset => scan_code[7]~reg0.ENA
reset => SHIFTIN[0].ENA
reset => SHIFTIN[1].ENA
reset => SHIFTIN[2].ENA
reset => SHIFTIN[3].ENA
reset => SHIFTIN[4].ENA
reset => SHIFTIN[5].ENA
reset => SHIFTIN[6].ENA
reset => SHIFTIN[7].ENA
reset => SHIFTIN[8].ENA
read => scan_ready~reg0.ACLR
scan_code[0] <= scan_code[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[1] <= scan_code[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[2] <= scan_code[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[3] <= scan_code[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[4] <= scan_code[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[5] <= scan_code[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[6] <= scan_code[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_code[7] <= scan_code[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
scan_ready <= scan_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|convert_and_display|COMPARE:inst5
MAKE_CODE[0] => Equal0.IN7
MAKE_CODE[1] => Equal0.IN6
MAKE_CODE[2] => Equal0.IN5
MAKE_CODE[3] => Equal0.IN4
MAKE_CODE[4] => Equal0.IN3
MAKE_CODE[5] => Equal0.IN2
MAKE_CODE[6] => Equal0.IN1
MAKE_CODE[7] => Equal0.IN0
BREAK_CODE[0] => Equal0.IN15
BREAK_CODE[1] => Equal0.IN14
BREAK_CODE[2] => Equal0.IN13
BREAK_CODE[3] => Equal0.IN12
BREAK_CODE[4] => Equal0.IN11
BREAK_CODE[5] => Equal0.IN10
BREAK_CODE[6] => Equal0.IN9
BREAK_CODE[7] => Equal0.IN8
error <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|convert_and_display|reg8:inst9
D[0] => state[0].DATAIN
D[1] => state[1].DATAIN
D[2] => state[2].DATAIN
D[3] => state[3].DATAIN
D[4] => state[4].DATAIN
D[5] => state[5].DATAIN
D[6] => state[6].DATAIN
D[7] => state[7].DATAIN
Q[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= state[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= state[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= state[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= state[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= state[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= state[7].DB_MAX_OUTPUT_PORT_TYPE
LE => state[7].ENA
LE => state[6].ENA
LE => state[5].ENA
LE => state[4].ENA
LE => state[3].ENA
LE => state[2].ENA
LE => state[1].ENA
LE => state[0].ENA
MR => state[0].ACLR
MR => state[1].ACLR
MR => state[2].ACLR
MR => state[3].ACLR
MR => state[4].ACLR
MR => state[5].ACLR
MR => state[6].ACLR
MR => state[7].ACLR
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => state[3].CLK
clk => state[4].CLK
clk => state[5].CLK
clk => state[6].CLK
clk => state[7].CLK


